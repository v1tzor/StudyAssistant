CREATE TABLE homeworkEntity (
    uid TEXT PRIMARY KEY NOT NULL,
    class_id TEXT,
    deadline INTEGER NOT NULL,
    subject_id TEXT,
    organization_id TEXT NOT NULL,
    theoretical_tasks TEXT NOT NULL,
    practical_tasks TEXT NOT NULL,
    presentations TEXT NOT NULL,
    test TEXT,
    priority TEXT NOT NULL,
    is_done INTEGER NOT NULL,
    complete_date INTEGER,
    updated_at INTEGER NOT NULL,
    is_cache_data INTEGER NOT NULL
);

addOrUpdateHomework:
INSERT OR REPLACE INTO homeworkEntity (uid, class_id, deadline, subject_id, organization_id, theoretical_tasks, practical_tasks, presentations, test, priority, is_done, complete_date, updated_at, is_cache_data)
VALUES ?;

fetchHomeworkById:
SELECT *
FROM homeworkEntity
WHERE uid = ? AND is_cache_data = ?;

fetchHomeworksById:
SELECT *
FROM homeworkEntity
WHERE uid IN ? AND is_cache_data = ?;

fetchHomeworksByTimeRange:
SELECT *
FROM homeworkEntity
WHERE (deadline BETWEEN ? AND ?) AND is_cache_data = ?
ORDER BY deadline DESC;

fetchActiveAndLinkedHomeworks:
SELECT *
FROM homeworkEntity
WHERE (deadline >= ? AND is_done = 0 AND class_id IS NOT NULL) AND is_cache_data = ?
ORDER BY deadline DESC;

fetchOverdueHomeworks:
SELECT *
FROM homeworkEntity
WHERE (deadline < ? AND is_done = 0 AND complete_date IS NULL) AND is_cache_data = ?
ORDER BY deadline DESC;

fetchCompletedHomeworksCount:
SELECT COUNT(*)
FROM homeworkEntity
WHERE (is_done = 1 AND complete_date IS NOT NULL) AND is_cache_data = ?
ORDER BY deadline DESC;

fetchAllHomeworks:
SELECT *
FROM homeworkEntity
WHERE is_cache_data = ?;

fetchEmptyHomeworks:
SELECT uid, updated_at
FROM homeworkEntity
WHERE is_cache_data = 1;

deleteHomeworks:
DELETE FROM homeworkEntity
WHERE uid IN ? AND is_cache_data = ?;

deleteAllHomeworks:
DELETE FROM homeworkEntity
WHERE is_cache_data = ?;